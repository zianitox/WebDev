/* @font-face {
    font-family: font;
    src: url(fonts/font.ttf);
} */


body{
    background-color: antiquewhite;
    
}

#h1{
    color: crimson;
    border-style: solid;
    border-width: 5px;
    border-color: hsl(273, 100%, 30%);
    border-radius:10px;
}

h4{
    color: chocolate;
    border-bottom: dashed;
    border-left: 15px dashed;
}

#pp1{
    
    border-style: dotted;
}

#pp2{
    border-style: double;
}

.chorus{
    font-style: italic;
    color:mediumpurple;
    border-style: groove;
    border-width: 10px;
    text-shadow: 20px 7px 2px pink, -20px -7px 2px violet;
}

.vs{
    color:darkcyan;
    font-weight: bold;
    border-style: ridge;
    border-width: 10px;
    background-color:aliceblue;
    box-shadow: 3px 3px 5px;
}

#title{
    border-style:inset;
    border-width: 7px;
}

#cover{
    border-style:outset;
    border-width: 10px;
}

#link{
    border-bottom: 5px solid rgb(208, 181, 28);
    border-left: 5px solid  rgb(49, 208, 28);
    border-right:5px solid  rgb(28, 130, 208);
    border-top: 5px solid rgb(208, 28, 112);
    font-size: 30px;
    text-decoration: none;
}

#h2{
    text-shadow: 3px 3px 5px hsl(0, 100%, 50%), -3px -3px 5px hsl(200, 100%, 50%);
}

.box{
    border: 5px solid;
    font-size: 3em;
    width: 250px;
    height: 250px;
}

#box1{
    background-color:brown;
    margin: 50px;

}
#box2{
    background-color: lightseagreen;
    margin: auto;
}
#boxes{
    border: 1px solid
}

#floatingimg{
    float: left;
}

#floatingimgr{
    float: right;
}

#floating{
    border:3px solid;
    display: flow-root;
}


        /* overflow = property that sets the desired
        behavior when content does not fit in the
        parent element box (overflows).

        overflow: visible
        overflow: hidden
        overflow: clip
        overflow: scroll
        overflow: auto */

#ovfh{
    border:2px solid;
    height: 81px;
    overflow: hidden;
}

#ovfc{
    border:2px solid;
    height: 81px;
    overflow: clip;
    overflow-clip-margin: 15px;
}

#ovfscr{
    
    border:2px solid;
    height: 81px;
    overflow: scroll;
}

#ovfauto{
    border:2px solid;
    height: 80px;
    width: 30%;
    overflow: auto;
}

    /* display = property specifies if/how
              an element is displayed

    block-level = start on a new line, take up the full width available
                  (h1, div, p, form, header, footer ...)

    inline = do not start on a new line, width is limited to what is needed
             (span, a, img ...) 
    block, inline, inline-block, none
             */

             
#div{
    background-color:blue;
    width: 200px;
    height: 200px;
    font-size: 50px;

}

#span{
    background-color:red;
    width: 200px;
    height: 200px;
    font-size: 50px;

    display:block;
}

#div2{
    background-color:blue;
    width: 200px;
    height: 200px;
    font-size: 50px;
    display: inline;

}

#span2{
    background-color:red;
    width: 200px;
    height: 200px;
    font-size: 50px;
    visibility: hidden;
    display:inline;
}

#div3{
    background-color:blue;
    width: 200px;
    height: 200px;
    font-size: 50px;
    display: inline-block;
    visibility: hidden;

}

#span3{
    background-color:red;
    width: 200px;
    height: 200px;
    font-size: 50px;


    display:inline-block;
}

.boxx{
    border: 2px solid;
    padding: 25px;
    width: 50%;
    height: auto;
    float: left;
    text-align: center;
    box-sizing: border-box;
    font-size: 16px;
}

/* - position:
    relative = positioned relative to where it normally is
    fixed    = positioned relative to the viewport
    absolute = positioned relative to nearest ancestor
    sticky   = positioned based on scroll position
    static   = default position for an element */





#backg1{
    background-image: url(metallica_background.jpg);
    background-repeat: no-repeat;
    background-position: center;
    /* background-attachment:fixed; */
    height: 100vh;
    width: 100%;
    border: 10px double;
    box-sizing: border-box;
}

#backg2{
    background-image: url(metallica_background.jpg);
    background-repeat: no-repeat;
    background-position: center;
    background-size:cover;
    height: 100vh;
    width: 100%;
    border: 10px double;
    box-sizing: border-box;
    background-attachment:fixed;
}

/* combinators = explains the relationship between listed selectors
    = descendant
    >= child
    ~ = general sibling
    + = adjacent sibling */

#pseudo:link{
    color:aqua;
}
#pseudo:hover{
    color: rgba(0, 255, 255, 0.372);
    font-size: 1.1em;
}



#pseudo:visited{
    color: aqua;
}

#pseudo:active{
    color: rgb(255, 140, 140);
    font-size: 1.1em;
}
#ul1 > li:hover{
    background-color: yellow;
}
#ul1 > li:not(hover){
    background-color: rgb(157, 157, 157);
}


#ul2 > li{
    background-color: rgb(157, 157, 157);
}
#ul2 > li:nth-child(even){
    background-color: yellow;
}


#ul3 > li{
    background-color: rgb(157, 157, 157);
}
#ul3 > li:nth-child(3n+2){
    background-color: yellow;
}


#greetings p{
    background-color:lightblue;
    padding: 10px;
    display: none;
}

#greetings:hover p{
    display: block;
}

#ps-elements::first-letter{
    font-size: 5em;
    font-style: italic;
}

#fstl::first-line{
    background-color:yellow;
}

#fstl::selection{
    background-color:aquamarine;
}

/* #fruits li::before{
    content: "✔";
} */

#apple::after{
    content: "🍎";
}
#banana::after{
    content: "🍌";
}
#orange::after{
    content: "🍊";
}

#fruits li::marker{
    content: "✔";
    color: green;
}